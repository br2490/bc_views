<?php

/**
 * Implements hook_block_info().
 */
function bc_views_block_info() {
 	$blocks['bc_solrYearbook'] = array( 
 		'info' => t('SOLR Collection for the Annual and Mortarboard (yearbook).'),
		'status' => BLOCK_VISIBILITY_LISTED,
		'pages' => 'yearbook2',
		'region' => 'content'
 	);
	$blocks['bc_solrNewspaper'] = array( 
		'info' => t('SOLR Collection for the Barnard Bulletin (newspaper).'),
		'status' => BLOCK_VISIBILITY_LISTED,
		'pages' => 'newspaper2',
		'region' => 'content'
	);
	$blocks['bc_solrStudentPubs'] = array( 
		'info' => t('SOLR Collection for Student Publications.'),
		'status' => BLOCK_VISIBILITY_LISTED,
		'pages' => 'studentpubs2',
		'region' => 'content'
	);
	$blocks['bc_solrPhotos'] = array( 
		'info' => t('SOLR Collection for Photos.'),
		'status' => BLOCK_VISIBILITY_LISTED,
		'pages' => 'photos2',
		'region' => 'content'
	);
 	return $blocks;
}

/**
 * Implements hook_block_save(). (UNUSED AT PRESENT)
 */
function bc_views_block_save($delta = '', $edit = array()) {
	$prefix = 'bc_solr';
	if (stripos($delta, $prefix) !== FALSE) {
		dsm($delta);
		dsm($edit);
		dsm($edit[pages]);
	}
}

/**
 * Implements hook_block_view().
 */
function bc_views_block_view($delta = '') {
	$block = array();
	switch ($delta) {

		// Yearbook View
		case 'bc_solrYearbook' :
			blockDefaultView();
			
			$query = 'mods_relatedItem_host_titleInfo_title_ms%3A"Mortarboard" AND RELS_EXT_isMemberOf_uri_ms%3A"info:fedora/islandora:bookCollection"';
			$solrResultContent = islandora_solr($query, NULL);

			$switchBlock = blockContentRenderer('islandora_solr', 'display_switch');
			$sortBlock = blockContentRenderer('islandora_solr', 'sort');

			$block['content'] = $switchBlock . $sortBlock;			
			$block['content'] .= $solrResultContent;
		break;

		// Barnard Bulletin View
		case 'bc_solrNewspaper';
			blockDefaultView();

			$query = '';
			$solrResultContent = islandora_solr($query, NULL);

			$switchBlock = blockContentRenderer('islandora_solr', 'display_switch');
			$sortBlock = blockContentRenderer('islandora_solr', 'sort');

			$block['content'] = $switchBlock . $sortBlock;
			$block['content'] = 'Pseudo Exception: Barnard Bulletin: Not Implemented.';
		break;

		// Student Publications View
		case 'bc_solrStudentPubs';
			blockDefaultView(); 

			$query = 'RELS_EXT_isMemberOf_uri_ms%3A"info:fedora/bc:barnard-literary-magazine"';
			$solrResultContent = islandora_solr($query, NULL);

			$switchBlock = blockContentRenderer('islandora_solr', 'display_switch');
			$sortBlock = blockContentRenderer('islandora_solr', 'sort');

			$block['content'] = $switchBlock . $sortBlock;
			$block['content'] .= $solrResultContent;
		break;

		// Photographs View
		case 'bc_solrPhotos';
			blockDefaultView();
			
			$query = 'mods_genre_ms%3A"photographs"';
			$solrResultContent = islandora_solr($query, NULL);

			$switchBlock = blockContentRenderer('islandora_solr', 'display_switch');
			$sortBlock = blockContentRenderer('islandora_solr', 'sort');

			$block['content'] = $switchBlock . $sortBlock;
			$block['content'] .= $solrResultContent;
		break;
	}
	return $block;
}

function blockDefaultView() {
	// this should be a variable lookup eventually.
	// vget whatever, default=>'grid';
	if (!$_GET['display']) { $_GET['display']='grid'; }
}

// Generates a rendered block from $module with name $functionName.
function blockContentRenderer($module, $functionName) {
	$getBlock = block_load($module, $functionName);
	$getBlock->theme = $GLOBALS['theme'];
	$blockRenderBlock = _block_render_blocks(array($getBlock));
	$blockRenderBuild = _block_get_renderable_array($blockRenderBlock);
	$blockRendered = drupal_render($blockRenderBuild);
	return $blockRendered;
}

// Reports all islandora blocks available... I'm lazy.
function islandoraBlocks() {
	$islandoraBlocks = module_invoke('islandora_solr', 'block_info');
	dsm($islandoraBlocks);
}


// BEGIN ALL OF THE SOLR QUERY AND RESULT HOOKS WE MIGHT EVER WANT.

/**
 * Implements hook_islandora_solr_query().
 */
function bc_views_islandora_solr_query($islandora_solr_query) {
}

/**
 * Implements hook_islandora_solr_query_alter().
 * Using this hook to switch around the actual SOLR query: q = fq and iq = *:* so q = isempty();
 */
function bc_views_islandora_solr_query_alter(&$islandora_solr_query) {
	// If we're on an islandora/search page don't modify the query.
	// Reduce nesting.
	if (strpos(request_path(),'islandora/search/') !== FALSE) {
		return;
	} 
	// Otherwise assume we're on one of our custom landing pages (this is a dangerous assumption but it works for now)
	// Something to think about: leave solr_query alone unless has no matching solr configuration. 
	$islandora_solr_query->solrLimit = '8';
	$islandora_solr_query->solrParams['fq'][] = $islandora_solr_query->solrQuery;
	$islandora_solr_query->internalSolrQuery = '*:*';
	$islandora_solr_query->solrQuery = '';
	// dsm($islandora_solr_query);
}

// !!
// At this point the SOLR Query is executed!!!
// !!

/**
 * Implements hook_islandora_solr_query_result().
 */
function bc_views_islandora_solr_query_result($result) {
}

/**
 * Implements hook_islandora_solr_results_alter().
 */
function bc_views_islandora_solr_results_alter(&$search_results, $query_processor) {
}